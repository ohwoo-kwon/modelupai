{
  "id": "533f2264-290d-46e6-8ce4-f0c146a9924f",
  "prevId": "95be4102-5eec-4fd5-9ff3-74861f0bc0f5",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.fittings": {
      "name": "fittings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "photo_id": {
          "name": "photo_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_photo_url": {
          "name": "user_photo_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "result_image_url": {
          "name": "result_image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "feedback": {
          "name": "feedback",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "fittings_profile_id_profiles_profile_id_fk": {
          "name": "fittings_profile_id_profiles_profile_id_fk",
          "tableFrom": "fittings",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fittings_photo_id_photos_photo_id_fk": {
          "name": "fittings_photo_id_photos_photo_id_fk",
          "tableFrom": "fittings",
          "tableTo": "photos",
          "columnsFrom": [
            "photo_id"
          ],
          "columnsTo": [
            "photo_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "select-fittings-policy": {
          "name": "select-fittings-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "insert-fittings-policy": {
          "name": "insert-fittings-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"fittings\".\"profile_id\""
        },
        "edit-fittings-policy": {
          "name": "edit-fittings-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"fittings\".\"profile_id\"",
          "withCheck": "(select auth.uid()) = \"fittings\".\"profile_id\""
        },
        "delete-fittings-policy": {
          "name": "delete-fittings-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"fittings\".\"profile_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.photo_views": {
      "name": "photo_views",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "photo_id": {
          "name": "photo_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "varchar(45)",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "viewed_at": {
          "name": "viewed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "photo_views_photo_idx": {
          "name": "photo_views_photo_idx",
          "columns": [
            {
              "expression": "photo_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "photo_views_viewed_at_idx": {
          "name": "photo_views_viewed_at_idx",
          "columns": [
            {
              "expression": "viewed_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "photo_views_user_photo_date_idx": {
          "name": "photo_views_user_photo_date_idx",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "photo_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "viewed_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "photo_views_photo_id_photos_photo_id_fk": {
          "name": "photo_views_photo_id_photos_photo_id_fk",
          "tableFrom": "photo_views",
          "tableTo": "photos",
          "columnsFrom": [
            "photo_id"
          ],
          "columnsTo": [
            "photo_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "photo_views_profile_id_profiles_profile_id_fk": {
          "name": "photo_views_profile_id_profiles_profile_id_fk",
          "tableFrom": "photo_views",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "select-own-photo-views-policy": {
          "name": "select-own-photo-views-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"photo_views\".\"profile_id\""
        },
        "select-photo-owner-views-policy": {
          "name": "select-photo-owner-views-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM photos\n        WHERE photos.photo_id = \"photo_views\".\"photo_id\"\n        AND photos.profile_id = (select auth.uid())\n      )"
        },
        "insert-authenticated-photo-views-policy": {
          "name": "insert-authenticated-photo-views-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"photo_views\".\"profile_id\""
        },
        "insert-anonymous-photo-views-policy": {
          "name": "insert-anonymous-photo-views-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "anon"
          ],
          "withCheck": "\"photo_views\".\"profile_id\" IS NULL"
        },
        "no-update-photo-views-policy": {
          "name": "no-update-photo-views-policy",
          "as": "RESTRICTIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "false",
          "withCheck": "false"
        },
        "delete-own-photo-views-policy": {
          "name": "delete-own-photo-views-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"photo_views\".\"profile_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.photos": {
      "name": "photos",
      "schema": "",
      "columns": {
        "photo_id": {
          "name": "photo_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "image_url": {
          "name": "image_url",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": true
        },
        "lookbook_url": {
          "name": "lookbook_url",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "varchar(200)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tags": {
          "name": "tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "views": {
          "name": "views",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "fittings": {
          "name": "fittings",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "photos_profile_id_profiles_profile_id_fk": {
          "name": "photos_profile_id_profiles_profile_id_fk",
          "tableFrom": "photos",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "select-photo-policy": {
          "name": "select-photo-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "insert-photos-policy": {
          "name": "insert-photos-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"photos\".\"profile_id\""
        },
        "edit-photo-policy": {
          "name": "edit-photo-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"photos\".\"profile_id\"",
          "withCheck": "(select auth.uid()) = \"photos\".\"profile_id\""
        },
        "delete-photo-policy": {
          "name": "delete-photo-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"photos\".\"profile_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "total_earnings": {
          "name": "total_earnings",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.00'"
        },
        "total_spent": {
          "name": "total_spent",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.00'"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_profile_id_users_id_fk": {
          "name": "profiles_profile_id_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_email_unique": {
          "name": "profiles_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        },
        "profiles_name_unique": {
          "name": "profiles_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "edit-profile-policy": {
          "name": "edit-profile-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"profile_id\"",
          "withCheck": "(select auth.uid()) = \"profiles\".\"profile_id\""
        },
        "delete-profile-policy": {
          "name": "delete-profile-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"profile_id\""
        },
        "select-profile-policy": {
          "name": "select-profile-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}